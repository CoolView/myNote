# NoSQL

标签（）： NoSQL MongoDB

---

> 最近开始学习MongoDB 先了解下NoSQL



**1. NoSQL 简介**
-----------

NoSQL，全称是”Not Only Sql”,指的是非关系型的数据库。这类数据库主要有这些特点：非关系型的、分布式的、开源的、水平可扩展的。原始的目的是为了大规模web应用，这场全新的数据库革命运动早期就有人提出，发展至2009年趋势越发高涨。NoSQL的拥护者们提倡运用非关系型的数据存储，通常的应用如：模式自由、支持简易复制、简单的API、最终的一致性（非ACID）、大容量数据等。NoSQL被我们用得最多的当数key-value存储，当然还有其他的文档型的、列存储、图型数据库、xml数据库等。相对于目前铺天盖地的关系型数据库运用，这一概念无疑是一种全新思维的注入。
**2. NoSQL的优势**
--------------

 1. 易扩展
    NoSQL数据库种类繁多，但是一个共同的特点都是去掉关系数据库的关系型特性。数据之间无关系，这样就非常容易扩展。也无形之间，在架构的层面带来了可扩展的能力。甚至有多种NoSQL之间的整合。
 2. 灵活的数据模型
    NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。而在关系型数据库里，增删字段是一件非常麻烦的事情。如果是非常大数据量的表，增加字段简直就是一个噩梦。
 3. 高可用
    NoSQL在不太影响性能的情况，就可以方便的实现高可用的架构。比如Cassandra，HBase模型，通过复制模型也能实现高可用。
 4. 大数据量，高性能
    NoSQL数据库都具有非常高的读写性能，尤其在大数据量下，同样表现优秀。这得益于它的无关系性，数据库的结构简单。
 **3. NoSQL的缺点**
--------------
- 很难实现数据的完整性
- 缺乏强有力的技术支持
- 开源数据库从出现到用户接受需要一个漫长的过程
- 关系型数据库在设计时更能够体现实际
**4. NoSQL 数据库分类**
-----------
<table>
   <tr>
      <td>类型</td>
      <td>部分代表</td>
      <td>特点</td>
   </tr>
   <tr>
      <td>列存储</td>
      <td>Hbase <br />Cassandra<br /> Hypertable</td>
      <td>顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。</td>
   </tr>
   <tr>
      <td>文档存储</td>
      <td>MongoDB<br/>CouchDB</td>
      <td>文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有有机会对某些字段建立索引，实现关系数据库的某些功能。</td>
   </tr>
   <tr>
      <td>key-value存储</td>
      <td>Tokyo Cabinet / Tyrant<br/>Berkeley DB<br/>MemcacheDB<br/>Redis</td>
      <td>可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能）</td>
   </tr>
   <tr>
      <td>图存储</td>
      <td>Neo4J<br/>FlockDB</td>
      <td>图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。</td>
   </tr>
   <tr>
      <td>对象存储</td>
      <td>db4o<br/>Versant</td>
      <td>通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。</td>
   </tr>
   <tr>
      <td>xml数据库</td>
      <td>Berkeley DB XML<br/>BaseX</td>
      <td>高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。</td>
   </tr>
</table>

  [1]: www.mongodb.org